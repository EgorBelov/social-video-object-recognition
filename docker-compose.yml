version: '3.9'
services:
  api:
    build:
      context: ./api_service
      dockerfile: Dockerfile
    container_name: api_service
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    # environment:
    #   - DATABASE_URL=postgresql://postgres:123321@db/svor
    #   - RABBITMQ_HOST=rabbitmq
    #   - API_URL=http://api:8000
    #   - PROJECT_ROOT=/app
    env_file: .env
    volumes:
      - ./videos:/app/videos
      - ./processed_videos:/app/processed_videos

  worker:
    build:
      context: ./worker_service
      dockerfile: Dockerfile
    container_name: worker_service
    depends_on:
      - db
      - rabbitmq
    # environment:
    #   - DATABASE_URL=postgresql://postgres:123321@db/svor
    #   - RABBITMQ_HOST=rabbitmq
    #   - PROJECT_ROOT=/app
    env_file: .env
    volumes:
      - ./videos:/app/videos
      - ./processed_videos:/app/processed_videos
      - ./yolo_model:/app/yolo_model

  bot:
    build:
      context: ./bot_service
      dockerfile: Dockerfile
    container_name: bot_service
    depends_on:
      - api
      - rabbitmq
    # environment:
    #   - TELEGRAM_BOT_TOKEN=8029380554:AAHeZmmWtbpfioHQ6yEFeTP2ZjkDbX1Y4Iw
    #   - API_URL=http://api:8000
    #   - PROJECT_ROOT=/app
    env_file: .env
    volumes:
      - ./videos:/app/videos
      - ./processed_videos:/app/processed_videos

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    ports:
      - "5672:5672"
      - "15672:15672"

  db:
    image: postgres:14
    container_name: postgres_db
    # environment:
    #   - POSTGRES_DB=svor
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=123321
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install flake8
          # или если у вас есть requirements, pip install -r requirements.txt

      - name: Lint (flake8)
        run: |
          flake8 api_service/ worker_service/ bot_service/

      - name: Static analysis (mypy)
        run: mypy api_service/ worker_service/ bot_service/
